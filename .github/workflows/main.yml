# Nama Workflow yang akan tampil di tab "Actions" di GitHub
name: Bot TerimaWA

# =========================================================================
# TRIGGER
# 'workflow_dispatch' berarti workflow ini hanya berjalan ketika dipicu
# secara manual atau melalui API.
# =========================================================================
on:
  workflow_dispatch:
    # Definisikan SEMUA input yang BISA diterima oleh workflow ini.
    inputs:
      action:
        description: 'Aksi yang dijalankan (get_qr, get_pairing_code, set_mode, set_blasting)'
        required: true
        type: string

      db_account_id:
        description: 'ID dari tabel whatsapp_accounts di database Anda'
        required: true
        type: string

      # --- INPUT BARU UNTUK BOT BARU ---
      phone_number:
        description: 'Nomor HP untuk metode pairing code (contoh: 62812...)'
        required: false # Tidak wajib, hanya untuk pairing
        type: string
        
      # --- INPUT BARU UNTUK MANAJEMEN BOT ---
      terimawa_bot_id:
        description: 'ID Bot dari terimawa.com untuk dikelola'
        required: false # Tidak wajib, hanya untuk manajemen
        type: string
        
      value:
        description: 'Nilai yang akan di-set (misal: mode "1", atau blast "1"/"0")'
        required: false # Tidak wajib, hanya untuk manajemen
        type: string

# =========================================================================
# JOBS
# =========================================================================
jobs:
  run-bot-script:
    name: Menjalankan Skrip Bot
    runs-on: ubuntu-latest
    
    # ========================== PERBAIKAN 1 ==========================
    # Menjalankan service FlareSolverr di latar belakang.
    # Skrip bot akan berkomunikasi dengan service ini untuk melewati Cloudflare.
    services:
      flaresolverr:
        image: ghcr.io/flaresolverr/flaresolverr:latest
        ports:
          - 8191:8191 # Memetakan port container ke host runner
        env:
          LOG_LEVEL: info # (Opsional) Mengatur level log FlareSolverr
          
    # Definisikan environment variables yang akan tersedia untuk bot.js
    # PENTING: Semua value di 'secrets' harus diatur di Settings -> Secrets -> Actions
    env:
      # Kredensial Login TerimaWA
      TERIMAWA_USERNAME: ${{ secrets.TERIMAWA_USERNAME }}
      TERIMAWA_PASSWORD: ${{ secrets.TERIMAWA_PASSWORD }}
      
      # URL dan Secret untuk Callback
      CALLBACK_URL: ${{ secrets.CALLBACK_URL }}
      CALLBACK_SECRET: ${{ secrets.CALLBACK_SECRET }}
      
      # Meneruskan semua input dari trigger ke environment skrip
      ACTION: ${{ github.event.inputs.action }}
      DB_ACCOUNT_ID: ${{ github.event.inputs.db_account_id }}
      PHONE_NUMBER: ${{ github.event.inputs.phone_number }}
      TERIMAWA_BOT_ID: ${{ github.event.inputs.terimawa_bot_id }}
      VALUE: ${{ github.event.inputs.value }}
      
      # ========================== PERBAIKAN 2 ==========================
      # Variabel baru untuk memberitahu bot.js di mana FlareSolverr berjalan.
      FLARESOLVERR_URL: 'http://localhost:8191'

    # Urutan langkah-langkah yang akan dijalankan
    steps:
      - name: 1. Checkout Repositori
        uses: actions/checkout@v4

      - name: 2. Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: 3. Cache NPM Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 4. Install Dependencies
        run: npm install
        
      - name: 5. Jalankan Skrip Bot TerimaWA
        run: node bot.js
